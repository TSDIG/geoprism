<!--

    Copyright (c) 2015 TerraFrame, Inc. All rights reserved.

    This file is part of Runway SDK(tm).

    Runway SDK(tm) is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    Runway SDK(tm) is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.runwaysdk</groupId>
    <artifactId>geodashboard</artifactId>
    <version>1.01.0005</version>
  </parent>
  <artifactId>geodashboard-server</artifactId>
  <packaging>jar</packaging>

  <name>Geo dashboard server</name>
  <description>The back-end database server for Geo dashboard</description>

  <properties>
    <!-- Specify your development root database credentials here. -->
    <root.db>template_postgis</root.db>
    <root.user>postgres</root.user>
    <root.pass>postgres</root.pass>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.3.6</version>
    </dependency>
    <dependency>
      <groupId>com.runwaysdk</groupId>
      <artifactId>runwaysdk-gis-server</artifactId>
      <version>2.0.4</version>
    </dependency>
    <dependency>
      <groupId>com.runwaysdk</groupId>
      <artifactId>geodashboard-common</artifactId>
      <version>1.01.0005</version>
    </dependency>
    <!-- Need to have a dependency on the client jar for code generation and compiling. -->
    <dependency>
      <groupId>com.runwaysdk</groupId>
      <artifactId>geodashboard-client</artifactId>
      <version>1.01.0005</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.birt.runtime</groupId>
      <artifactId>org.eclipse.birt.runtime</artifactId>
      <version>4.4.0</version>
      <exclusions>
        <exclusion>
          <artifactId>org.apache.batik.pdf</artifactId>
          <groupId>org.eclipse.birt.runtime.3_7_1</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.runwaysdk.geodashboard</groupId>
      <artifactId>oda.driver</artifactId>
      <version>1.01.0007</version>
    </dependency>

    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-shapefile</artifactId>
      <version>${geotools.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-epsg-hsql</artifactId>
      <version>${geotools.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-image</artifactId>
      <version>${geotools.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-wms</artifactId>
      <version>${geotools.version}</version>
    </dependency>

    <dependency>
      <groupId>net.coobird</groupId>
      <artifactId>thumbnailator</artifactId>
      <version>[0.4, 0.5)</version>
    </dependency>
  </dependencies>

  <!-- These profiles allow for Maven execution of Runway-SDK's Java Tools, like rebuilding the database and importing schemas. -->
  <profiles>
    <profile>
      <id>rebuild-database</id>
      <activation>
        <property>
          <name>rebuild-database</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
              <execution>
                <id>rebuild-database</id>
                <phase>verify</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <executable>java</executable>
                  <mainClass>com.runwaysdk.dataaccess.InstallerCP</mainClass>
                  <arguments>
                    <argument>${root.user}</argument>
                    <argument>${root.pass}</argument>
                    <argument>${root.db}</argument>
                    <argument>com/runwaysdk/resources/xsd/schema.xsd</argument>
                  </arguments>
                  <systemProperties>
                    <systemProperty>
                      <key>database.user</key>
                      <value>${database.user}</value>
                    </systemProperty>
                    <systemProperty>
                      <key>database.password</key>
                      <value>${database.pass}</value>
                    </systemProperty>
                    <systemProperty>
                      <key>database.name</key>
                      <value>${database.name}</value>
                    </systemProperty>
                  </systemProperties>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>import-schema</id>
      <activation>
        <property>
          <name>import-schema</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
              <execution>
                <id>import-schema</id>
                <phase>verify</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <executable>java</executable>
                  <mainClass>com.runwaysdk.geodashboard.ImportSchema</mainClass>
                  <arguments>
                    <argument>${project.basedir}/src/main/domain</argument>
                  </arguments>
                  <systemProperties>
                    <systemProperty>
                      <key>database.user</key>
                      <value>${database.user}</value>
                    </systemProperty>
                    <systemProperty>
                      <key>database.password</key>
                      <value>${database.pass}</value>
                    </systemProperty>
                    <systemProperty>
                      <key>database.name</key>
                      <value>${database.name}</value>
                    </systemProperty>
                  </systemProperties>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>update-source-classes</id>
      <activation>
        <property>
          <name>update-source-classes</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
              <execution>
                <id>update-source-classes</id>
                <phase>verify</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <executable>java</executable>
                  <mainClass>com.runwaysdk.util.UpdateDatabaseSourceAndClasses</mainClass>
                  <arguments>
                    <argument>-compile</argument>
                  </arguments>
                  <systemProperties>
                    <systemProperty>
                      <key>database.user</key>
                      <value>${database.user}</value>
                    </systemProperty>
                    <systemProperty>
                      <key>database.password</key>
                      <value>${database.pass}</value>
                    </systemProperty>
                    <systemProperty>
                      <key>database.name</key>
                      <value>${database.name}</value>
                    </systemProperty>
                  </systemProperties>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>new-schema</id>
      <activation>
        <property>
          <name>new-schema</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
              <execution>
                <id>new-schema</id>
                <phase>verify</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <executable>java</executable>
                  <mainClass>com.runwaysdk.dataaccess.io.CreateDomainModel</mainClass>
                  <arguments>
                    <argument>${project.basedir}/src/main/working</argument>
                  </arguments>
                  <systemProperties>
                    <systemProperty>
                      <key>database.user</key>
                      <value>${database.user}</value>
                    </systemProperty>
                    <systemProperty>
                      <key>database.password</key>
                      <value>${database.pass}</value>
                    </systemProperty>
                    <systemProperty>
                      <key>database.name</key>
                      <value>${database.name}</value>
                    </systemProperty>
                  </systemProperties>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>unimport-working</id>
      <activation>
        <property>
          <name>unimport-working</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
              <execution>
                <id>unimport-working</id>
                <phase>verify</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <executable>java</executable>
                  <mainClass>com.runwaysdk.dataaccess.io.UndoAll</mainClass>
                  <arguments>
                    <argument>${project.basedir}/src/main/working</argument>
                    <argument></argument>
                    <argument>false</argument>
                  </arguments>
                  <systemProperties>
                    <systemProperty>
                      <key>database.user</key>
                      <value>${database.user}</value>
                    </systemProperty>
                    <systemProperty>
                      <key>database.password</key>
                      <value>${database.pass}</value>
                    </systemProperty>
                    <systemProperty>
                      <key>database.name</key>
                      <value>${database.name}</value>
                    </systemProperty>
                  </systemProperties>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>import-working</id>
      <activation>
        <property>
          <name>import-working</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
              <execution>
                <id>import-working</id>
                <phase>verify</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <executable>java</executable>
                  <mainClass>com.runwaysdk.geodashboard.ImportSchema</mainClass>
                  <arguments>
                    <argument>${project.basedir}/src/main/working</argument>
                    <argument></argument>
                    <argument>false</argument>
                  </arguments>
                  <systemProperties>
                    <systemProperty>
                      <key>database.user</key>
                      <value>${database.user}</value>
                    </systemProperty>
                    <systemProperty>
                      <key>database.password</key>
                      <value>${database.pass}</value>
                    </systemProperty>
                    <systemProperty>
                      <key>database.name</key>
                      <value>${database.name}</value>
                    </systemProperty>
                  </systemProperties>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <!-- This tells maven to resolve variables in our properties files. -->
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/main/domain</directory>
        <filtering>false</filtering>
        <targetPath>${project.basedir}/target/classes/metadata/geodashboard</targetPath>
      </resource>
    </resources>
    <testSourceDirectory>src/test/java</testSourceDirectory>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
    </testResources>

    <plugins>
      <!-- Read the server properties (from projects that extend geodashboard) as maven properties. This allows us to override the database properties later when we build. -->
      <plugin>
        <groupId>org.kohsuke.gmaven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <version>1.0-rc-5-patch-2</version>
        <executions>
          <execution>
            <id>ExtendableServerProperties</id>
            <phase>initialize</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <classpath>
                <element>
                  <groupId>commons-lang</groupId>
                  <artifactId>commons-lang</artifactId>
                  <version>2.4</version>
                </element>
              </classpath>
              <source>${project.basedir}/src/build/groovy/ExtendableServerProperties.groovy</source>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0-alpha-2</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <files>
                <file>${overrideServerPropertiesPath}</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Weave Aspects -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>aspectj-maven-plugin</artifactId>
        <version>${aspectj.plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjtools</artifactId>
            <version>${aspectj.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>test-compile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <aspectLibraries>
            <aspectLibrary>
              <groupId>com.runwaysdk</groupId>
              <artifactId>runwaysdk-common</artifactId>
            </aspectLibrary>
            <aspectLibrary>
              <groupId>com.runwaysdk</groupId>
              <artifactId>runwaysdk-server</artifactId>
            </aspectLibrary>
          </aspectLibraries>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <complianceLevel>${maven.compiler.target}</complianceLevel>
          <fork>true</fork>
          <meminitial>512m</meminitial>
          <maxmem>1024m</maxmem>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>add-resource</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>add-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>src/main/java</directory>
                  <targetPath>source/server/stub</targetPath>
                  <includes>
                    <include>**/*.java</include>
                  </includes>
                </resource>
                <resource>
                  <directory>src/main/java-gen/stub</directory>
                  <targetPath>source/server/stub</targetPath>
                  <includes>
                    <include>**/*.java</include>
                  </includes>
                </resource>
                <resource>
                  <directory>src/main/java-gen/base</directory>
                  <targetPath>source/server/base</targetPath>
                  <includes>
                    <include>**/*.java</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>
                      properties-maven-plugin
                    </artifactId>
                    <versionRange>
                      [1.0-alpha-2,)
                    </versionRange>
                    <goals>
                      <goal>
                        read-project-properties
                      </goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.kohsuke.gmaven
                    </groupId>
                    <artifactId>
                      gmaven-plugin
                    </artifactId>
                    <versionRange>
                      [1.0-rc-5-patch-2,)
                    </versionRange>
                    <goals>
                      <goal>execute</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>2.6</version>
      </dependency>
      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>1.1.1</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
</project>
