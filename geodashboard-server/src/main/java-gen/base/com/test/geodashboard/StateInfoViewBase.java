package com.test.geodashboard;

@com.runwaysdk.business.ClassSignature(hash = -1200774170)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to StateInfoView.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class StateInfoViewBase extends com.runwaysdk.business.View implements com.runwaysdk.generation.loader.Reloadable
{
  public final static String CLASS = "com.test.geodashboard.StateInfoView";
  public static java.lang.String ID = "id";
  public static java.lang.String VIEWRANK = "viewRank";
  public static java.lang.String VIEWRATIO = "viewRatio";
  private static final long serialVersionUID = -1200774170;
  
  public StateInfoViewBase()
  {
    super();
  }
  
  public String getId()
  {
    return getValue(ID);
  }
  
  public void validateId()
  {
    this.validateAttribute(ID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getIdMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.test.geodashboard.StateInfoView.CLASS);
    return mdClassIF.definesAttribute(ID);
  }
  
  public Integer getViewRank()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(VIEWRANK));
  }
  
  public void validateViewRank()
  {
    this.validateAttribute(VIEWRANK);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getViewRankMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.test.geodashboard.StateInfoView.CLASS);
    return mdClassIF.definesAttribute(VIEWRANK);
  }
  
  public void setViewRank(Integer value)
  {
    if(value == null)
    {
      setValue(VIEWRANK, "");
    }
    else
    {
      setValue(VIEWRANK, java.lang.Integer.toString(value));
    }
  }
  
  public Double getViewRatio()
  {
    return com.runwaysdk.constants.MdAttributeDoubleUtil.getTypeSafeValue(getValue(VIEWRATIO));
  }
  
  public void validateViewRatio()
  {
    this.validateAttribute(VIEWRATIO);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getViewRatioMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.test.geodashboard.StateInfoView.CLASS);
    return mdClassIF.definesAttribute(VIEWRATIO);
  }
  
  public void setViewRatio(Double value)
  {
    if(value == null)
    {
      setValue(VIEWRATIO, "");
    }
    else
    {
      setValue(VIEWRATIO, java.lang.Double.toString(value));
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static StateInfoView get(String id)
  {
    return (StateInfoView) com.runwaysdk.business.View.get(id);
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
