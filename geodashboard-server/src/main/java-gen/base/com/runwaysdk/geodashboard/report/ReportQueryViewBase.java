package com.runwaysdk.geodashboard.report;

@com.runwaysdk.business.ClassSignature(hash = -1215092115)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to ReportQueryView.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class ReportQueryViewBase extends com.runwaysdk.business.View implements com.runwaysdk.generation.loader.Reloadable
{
  public final static String CLASS = "com.runwaysdk.geodashboard.report.ReportQueryView";
  public static java.lang.String ID = "id";
  public static java.lang.String MAXDEPTH = "maxDepth";
  public static java.lang.String QUERYID = "queryId";
  public static java.lang.String QUERYLABEL = "queryLabel";
  private static final long serialVersionUID = -1215092115;
  
  public ReportQueryViewBase()
  {
    super();
  }
  
  public String getId()
  {
    return getValue(ID);
  }
  
  public void validateId()
  {
    this.validateAttribute(ID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getIdMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.geodashboard.report.ReportQueryView.CLASS);
    return mdClassIF.definesAttribute(ID);
  }
  
  public Integer getMaxDepth()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(MAXDEPTH));
  }
  
  public void validateMaxDepth()
  {
    this.validateAttribute(MAXDEPTH);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getMaxDepthMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.geodashboard.report.ReportQueryView.CLASS);
    return mdClassIF.definesAttribute(MAXDEPTH);
  }
  
  public void setMaxDepth(Integer value)
  {
    if(value == null)
    {
      setValue(MAXDEPTH, "");
    }
    else
    {
      setValue(MAXDEPTH, java.lang.Integer.toString(value));
    }
  }
  
  public String getQueryId()
  {
    return getValue(QUERYID);
  }
  
  public void validateQueryId()
  {
    this.validateAttribute(QUERYID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getQueryIdMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.geodashboard.report.ReportQueryView.CLASS);
    return mdClassIF.definesAttribute(QUERYID);
  }
  
  public void setQueryId(String value)
  {
    if(value == null)
    {
      setValue(QUERYID, "");
    }
    else
    {
      setValue(QUERYID, value);
    }
  }
  
  public String getQueryLabel()
  {
    return getValue(QUERYLABEL);
  }
  
  public void validateQueryLabel()
  {
    this.validateAttribute(QUERYLABEL);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getQueryLabelMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.geodashboard.report.ReportQueryView.CLASS);
    return mdClassIF.definesAttribute(QUERYLABEL);
  }
  
  public void setQueryLabel(String value)
  {
    if(value == null)
    {
      setValue(QUERYLABEL, "");
    }
    else
    {
      setValue(QUERYLABEL, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static ReportQueryView get(String id)
  {
    return (ReportQueryView) com.runwaysdk.business.View.get(id);
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
