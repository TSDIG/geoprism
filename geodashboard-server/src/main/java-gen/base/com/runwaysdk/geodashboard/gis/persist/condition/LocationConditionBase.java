package com.runwaysdk.geodashboard.gis.persist.condition;

@com.runwaysdk.business.ClassSignature(hash = 132098090)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to LocationCondition.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class LocationConditionBase extends com.runwaysdk.geodashboard.gis.persist.condition.DashboardCondition implements com.runwaysdk.generation.loader.Reloadable
{
  public final static String CLASS = "com.runwaysdk.geodashboard.gis.persist.condition.LocationCondition";
  public static java.lang.String COMPARISONVALUE = "comparisonValue";
  private static final long serialVersionUID = 132098090;
  
  public LocationConditionBase()
  {
    super();
  }
  
  public String getComparisonValue()
  {
    return getValue(COMPARISONVALUE);
  }
  
  public void validateComparisonValue()
  {
    this.validateAttribute(COMPARISONVALUE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getComparisonValueMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.geodashboard.gis.persist.condition.LocationCondition.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(COMPARISONVALUE);
  }
  
  public void setComparisonValue(String value)
  {
    if(value == null)
    {
      setValue(COMPARISONVALUE, "");
    }
    else
    {
      setValue(COMPARISONVALUE, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static LocationConditionQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    LocationConditionQuery query = new LocationConditionQuery(new com.runwaysdk.query.QueryFactory());
    com.runwaysdk.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public static LocationCondition get(String id)
  {
    return (LocationCondition) com.runwaysdk.business.Business.get(id);
  }
  
  public static LocationCondition getByKey(String key)
  {
    return (LocationCondition) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static LocationCondition lock(java.lang.String id)
  {
    LocationCondition _instance = LocationCondition.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static LocationCondition unlock(java.lang.String id)
  {
    LocationCondition _instance = LocationCondition.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
