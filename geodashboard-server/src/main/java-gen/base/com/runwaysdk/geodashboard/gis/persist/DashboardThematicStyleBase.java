package com.runwaysdk.geodashboard.gis.persist;

@com.runwaysdk.business.ClassSignature(hash = 1509200371)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to DashboardThematicStyle.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class DashboardThematicStyleBase extends com.runwaysdk.geodashboard.gis.persist.DashboardStyle implements com.runwaysdk.generation.loader.Reloadable
{
  public final static String CLASS = "com.runwaysdk.geodashboard.gis.persist.DashboardThematicStyle";
  public static java.lang.String AGGREGATIONTYPE = "aggregationType";
  public static java.lang.String MDATTRIBUTE = "mdAttribute";
  public static java.lang.String POINTMAXSIZE = "pointMaxSize";
  public static java.lang.String POINTMINSIZE = "pointMinSize";
  public static java.lang.String POLYGONMAXFILL = "polygonMaxFill";
  public static java.lang.String POLYGONMINFILL = "polygonMinFill";
  public static java.lang.String STYLECATEGORY1 = "styleCategory1";
  public static java.lang.String STYLECATEGORY2 = "styleCategory2";
  public static java.lang.String STYLECATEGORY3 = "styleCategory3";
  public static java.lang.String STYLECATEGORY4 = "styleCategory4";
  public static java.lang.String STYLECATEGORY5 = "styleCategory5";
  public static java.lang.String STYLECATEGORYFILL1 = "styleCategoryFill1";
  public static java.lang.String STYLECATEGORYFILL2 = "styleCategoryFill2";
  public static java.lang.String STYLECATEGORYFILL3 = "styleCategoryFill3";
  public static java.lang.String STYLECATEGORYFILL4 = "styleCategoryFill4";
  public static java.lang.String STYLECATEGORYFILL5 = "styleCategoryFill5";
  public static java.lang.String STYLECONDITION = "styleCondition";
  private static final long serialVersionUID = 1509200371;
  
  public DashboardThematicStyleBase()
  {
    super();
  }
  
  @SuppressWarnings("unchecked")
  public java.util.List<com.runwaysdk.geodashboard.gis.persist.AllAggregationType> getAggregationType()
  {
    return (java.util.List<com.runwaysdk.geodashboard.gis.persist.AllAggregationType>) getEnumValues(AGGREGATIONTYPE);
  }
  
  public void addAggregationType(com.runwaysdk.geodashboard.gis.persist.AllAggregationType value)
  {
    if(value != null)
    {
      addEnumItem(AGGREGATIONTYPE, value.getId());
    }
  }
  
  public void removeAggregationType(com.runwaysdk.geodashboard.gis.persist.AllAggregationType value)
  {
    if(value != null)
    {
      removeEnumItem(AGGREGATIONTYPE, value.getId());
    }
  }
  
  public void clearAggregationType()
  {
    clearEnum(AGGREGATIONTYPE);
  }
  
  public void validateAggregationType()
  {
    this.validateAttribute(AGGREGATIONTYPE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF getAggregationTypeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.geodashboard.gis.persist.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdClassIF.definesAttribute(AGGREGATIONTYPE);
  }
  
  public com.runwaysdk.system.metadata.MdAttribute getMdAttribute()
  {
    if (getValue(MDATTRIBUTE).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.metadata.MdAttribute.get(getValue(MDATTRIBUTE));
    }
  }
  
  public String getMdAttributeId()
  {
    return getValue(MDATTRIBUTE);
  }
  
  public void validateMdAttribute()
  {
    this.validateAttribute(MDATTRIBUTE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getMdAttributeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.geodashboard.gis.persist.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(MDATTRIBUTE);
  }
  
  public void setMdAttribute(com.runwaysdk.system.metadata.MdAttribute value)
  {
    if(value == null)
    {
      setValue(MDATTRIBUTE, "");
    }
    else
    {
      setValue(MDATTRIBUTE, value.getId());
    }
  }
  
  public Integer getPointMaxSize()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(POINTMAXSIZE));
  }
  
  public void validatePointMaxSize()
  {
    this.validateAttribute(POINTMAXSIZE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF getPointMaxSizeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.geodashboard.gis.persist.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF)mdClassIF.definesAttribute(POINTMAXSIZE);
  }
  
  public void setPointMaxSize(Integer value)
  {
    if(value == null)
    {
      setValue(POINTMAXSIZE, "");
    }
    else
    {
      setValue(POINTMAXSIZE, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getPointMinSize()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(POINTMINSIZE));
  }
  
  public void validatePointMinSize()
  {
    this.validateAttribute(POINTMINSIZE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF getPointMinSizeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.geodashboard.gis.persist.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF)mdClassIF.definesAttribute(POINTMINSIZE);
  }
  
  public void setPointMinSize(Integer value)
  {
    if(value == null)
    {
      setValue(POINTMINSIZE, "");
    }
    else
    {
      setValue(POINTMINSIZE, java.lang.Integer.toString(value));
    }
  }
  
  public String getPolygonMaxFill()
  {
    return getValue(POLYGONMAXFILL);
  }
  
  public void validatePolygonMaxFill()
  {
    this.validateAttribute(POLYGONMAXFILL);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getPolygonMaxFillMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.geodashboard.gis.persist.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(POLYGONMAXFILL);
  }
  
  public void setPolygonMaxFill(String value)
  {
    if(value == null)
    {
      setValue(POLYGONMAXFILL, "");
    }
    else
    {
      setValue(POLYGONMAXFILL, value);
    }
  }
  
  public String getPolygonMinFill()
  {
    return getValue(POLYGONMINFILL);
  }
  
  public void validatePolygonMinFill()
  {
    this.validateAttribute(POLYGONMINFILL);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getPolygonMinFillMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.geodashboard.gis.persist.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(POLYGONMINFILL);
  }
  
  public void setPolygonMinFill(String value)
  {
    if(value == null)
    {
      setValue(POLYGONMINFILL, "");
    }
    else
    {
      setValue(POLYGONMINFILL, value);
    }
  }
  
  public String getStyleCategory1()
  {
    return getValue(STYLECATEGORY1);
  }
  
  public void validateStyleCategory1()
  {
    this.validateAttribute(STYLECATEGORY1);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getStyleCategory1Md()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.geodashboard.gis.persist.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(STYLECATEGORY1);
  }
  
  public void setStyleCategory1(String value)
  {
    if(value == null)
    {
      setValue(STYLECATEGORY1, "");
    }
    else
    {
      setValue(STYLECATEGORY1, value);
    }
  }
  
  public String getStyleCategory2()
  {
    return getValue(STYLECATEGORY2);
  }
  
  public void validateStyleCategory2()
  {
    this.validateAttribute(STYLECATEGORY2);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getStyleCategory2Md()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.geodashboard.gis.persist.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(STYLECATEGORY2);
  }
  
  public void setStyleCategory2(String value)
  {
    if(value == null)
    {
      setValue(STYLECATEGORY2, "");
    }
    else
    {
      setValue(STYLECATEGORY2, value);
    }
  }
  
  public String getStyleCategory3()
  {
    return getValue(STYLECATEGORY3);
  }
  
  public void validateStyleCategory3()
  {
    this.validateAttribute(STYLECATEGORY3);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getStyleCategory3Md()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.geodashboard.gis.persist.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(STYLECATEGORY3);
  }
  
  public void setStyleCategory3(String value)
  {
    if(value == null)
    {
      setValue(STYLECATEGORY3, "");
    }
    else
    {
      setValue(STYLECATEGORY3, value);
    }
  }
  
  public String getStyleCategory4()
  {
    return getValue(STYLECATEGORY4);
  }
  
  public void validateStyleCategory4()
  {
    this.validateAttribute(STYLECATEGORY4);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getStyleCategory4Md()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.geodashboard.gis.persist.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(STYLECATEGORY4);
  }
  
  public void setStyleCategory4(String value)
  {
    if(value == null)
    {
      setValue(STYLECATEGORY4, "");
    }
    else
    {
      setValue(STYLECATEGORY4, value);
    }
  }
  
  public String getStyleCategory5()
  {
    return getValue(STYLECATEGORY5);
  }
  
  public void validateStyleCategory5()
  {
    this.validateAttribute(STYLECATEGORY5);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getStyleCategory5Md()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.geodashboard.gis.persist.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(STYLECATEGORY5);
  }
  
  public void setStyleCategory5(String value)
  {
    if(value == null)
    {
      setValue(STYLECATEGORY5, "");
    }
    else
    {
      setValue(STYLECATEGORY5, value);
    }
  }
  
  public String getStyleCategoryFill1()
  {
    return getValue(STYLECATEGORYFILL1);
  }
  
  public void validateStyleCategoryFill1()
  {
    this.validateAttribute(STYLECATEGORYFILL1);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getStyleCategoryFill1Md()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.geodashboard.gis.persist.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(STYLECATEGORYFILL1);
  }
  
  public void setStyleCategoryFill1(String value)
  {
    if(value == null)
    {
      setValue(STYLECATEGORYFILL1, "");
    }
    else
    {
      setValue(STYLECATEGORYFILL1, value);
    }
  }
  
  public String getStyleCategoryFill2()
  {
    return getValue(STYLECATEGORYFILL2);
  }
  
  public void validateStyleCategoryFill2()
  {
    this.validateAttribute(STYLECATEGORYFILL2);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getStyleCategoryFill2Md()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.geodashboard.gis.persist.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(STYLECATEGORYFILL2);
  }
  
  public void setStyleCategoryFill2(String value)
  {
    if(value == null)
    {
      setValue(STYLECATEGORYFILL2, "");
    }
    else
    {
      setValue(STYLECATEGORYFILL2, value);
    }
  }
  
  public String getStyleCategoryFill3()
  {
    return getValue(STYLECATEGORYFILL3);
  }
  
  public void validateStyleCategoryFill3()
  {
    this.validateAttribute(STYLECATEGORYFILL3);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getStyleCategoryFill3Md()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.geodashboard.gis.persist.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(STYLECATEGORYFILL3);
  }
  
  public void setStyleCategoryFill3(String value)
  {
    if(value == null)
    {
      setValue(STYLECATEGORYFILL3, "");
    }
    else
    {
      setValue(STYLECATEGORYFILL3, value);
    }
  }
  
  public String getStyleCategoryFill4()
  {
    return getValue(STYLECATEGORYFILL4);
  }
  
  public void validateStyleCategoryFill4()
  {
    this.validateAttribute(STYLECATEGORYFILL4);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getStyleCategoryFill4Md()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.geodashboard.gis.persist.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(STYLECATEGORYFILL4);
  }
  
  public void setStyleCategoryFill4(String value)
  {
    if(value == null)
    {
      setValue(STYLECATEGORYFILL4, "");
    }
    else
    {
      setValue(STYLECATEGORYFILL4, value);
    }
  }
  
  public String getStyleCategoryFill5()
  {
    return getValue(STYLECATEGORYFILL5);
  }
  
  public void validateStyleCategoryFill5()
  {
    this.validateAttribute(STYLECATEGORYFILL5);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getStyleCategoryFill5Md()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.geodashboard.gis.persist.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(STYLECATEGORYFILL5);
  }
  
  public void setStyleCategoryFill5(String value)
  {
    if(value == null)
    {
      setValue(STYLECATEGORYFILL5, "");
    }
    else
    {
      setValue(STYLECATEGORYFILL5, value);
    }
  }
  
  public com.runwaysdk.geodashboard.gis.persist.condition.DashboardCondition getStyleCondition()
  {
    if (getValue(STYLECONDITION).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.geodashboard.gis.persist.condition.DashboardCondition.get(getValue(STYLECONDITION));
    }
  }
  
  public String getStyleConditionId()
  {
    return getValue(STYLECONDITION);
  }
  
  public void validateStyleCondition()
  {
    this.validateAttribute(STYLECONDITION);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getStyleConditionMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.geodashboard.gis.persist.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(STYLECONDITION);
  }
  
  public void setStyleCondition(com.runwaysdk.geodashboard.gis.persist.condition.DashboardCondition value)
  {
    if(value == null)
    {
      setValue(STYLECONDITION, "");
    }
    else
    {
      setValue(STYLECONDITION, value.getId());
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static DashboardThematicStyleQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    DashboardThematicStyleQuery query = new DashboardThematicStyleQuery(new com.runwaysdk.query.QueryFactory());
    com.runwaysdk.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public static DashboardThematicStyle get(String id)
  {
    return (DashboardThematicStyle) com.runwaysdk.business.Business.get(id);
  }
  
  public static DashboardThematicStyle getByKey(String key)
  {
    return (DashboardThematicStyle) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static DashboardThematicStyle lock(java.lang.String id)
  {
    DashboardThematicStyle _instance = DashboardThematicStyle.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static DashboardThematicStyle unlock(java.lang.String id)
  {
    DashboardThematicStyle _instance = DashboardThematicStyle.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
