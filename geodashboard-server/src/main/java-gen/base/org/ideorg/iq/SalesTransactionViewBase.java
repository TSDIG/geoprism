package org.ideorg.iq;

@com.runwaysdk.business.ClassSignature(hash = -924281585)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to SalesTransactionView.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class SalesTransactionViewBase extends com.runwaysdk.business.View implements com.runwaysdk.generation.loader.Reloadable
{
  public final static String CLASS = "org.ideorg.iq.SalesTransactionView";
  public static java.lang.String DELIVERYDATE = "deliveryDate";
  public static java.lang.String ID = "id";
  public static java.lang.String NUMBEROFUNITS = "numberOfUnits";
  private static final long serialVersionUID = -924281585;
  
  public SalesTransactionViewBase()
  {
    super();
  }
  
  public java.util.Date getDeliveryDate()
  {
    return com.runwaysdk.constants.MdAttributeDateUtil.getTypeSafeValue(getValue(DELIVERYDATE));
  }
  
  public void validateDeliveryDate()
  {
    this.validateAttribute(DELIVERYDATE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getDeliveryDateMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(org.ideorg.iq.SalesTransactionView.CLASS);
    return mdClassIF.definesAttribute(DELIVERYDATE);
  }
  
  public void setDeliveryDate(java.util.Date value)
  {
    if(value == null)
    {
      setValue(DELIVERYDATE, "");
    }
    else
    {
      setValue(DELIVERYDATE, new java.text.SimpleDateFormat(com.runwaysdk.constants.Constants.DATE_FORMAT).format(value));
    }
  }
  
  public String getId()
  {
    return getValue(ID);
  }
  
  public void validateId()
  {
    this.validateAttribute(ID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getIdMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(org.ideorg.iq.SalesTransactionView.CLASS);
    return mdClassIF.definesAttribute(ID);
  }
  
  public Double getNumberOfUnits()
  {
    return com.runwaysdk.constants.MdAttributeDoubleUtil.getTypeSafeValue(getValue(NUMBEROFUNITS));
  }
  
  public void validateNumberOfUnits()
  {
    this.validateAttribute(NUMBEROFUNITS);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getNumberOfUnitsMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(org.ideorg.iq.SalesTransactionView.CLASS);
    return mdClassIF.definesAttribute(NUMBEROFUNITS);
  }
  
  public void setNumberOfUnits(Double value)
  {
    if(value == null)
    {
      setValue(NUMBEROFUNITS, "");
    }
    else
    {
      setValue(NUMBEROFUNITS, java.lang.Double.toString(value));
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static SalesTransactionView get(String id)
  {
    return (SalesTransactionView) com.runwaysdk.business.View.get(id);
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
