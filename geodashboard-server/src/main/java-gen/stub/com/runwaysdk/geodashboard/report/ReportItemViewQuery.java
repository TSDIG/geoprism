package com.runwaysdk.geodashboard.report;

/**
 *
 * @author Autogenerated by RunwaySDK
 */
public class ReportItemViewQuery extends com.runwaysdk.geodashboard.report.ReportItemViewQueryBase  implements com.runwaysdk.generation.loader.Reloadable
{

  public ReportItemViewQuery(com.runwaysdk.query.QueryFactory queryFactory)
  {
    super(queryFactory);
    this.buildQuery(new DefaultReportItemViewBuilder(queryFactory));
  }

  public ReportItemViewQuery(com.runwaysdk.query.QueryFactory queryFactory, com.runwaysdk.query.ViewQueryBuilder viewQueryBuilder)
  {
    super(queryFactory, viewQueryBuilder);
  }

  class DefaultReportItemViewBuilder extends com.runwaysdk.query.ViewQueryBuilder implements com.runwaysdk.generation.loader.Reloadable
  {
    private ReportItemQuery query;
    
    public DefaultReportItemViewBuilder(com.runwaysdk.query.QueryFactory queryFactory)
    {
      super(queryFactory);
      
      this.query = new ReportItemQuery(queryFactory);
    }

    protected ReportItemViewQuery getViewQuery()
    {
      return (ReportItemViewQuery)super.getViewQuery();
    }

    /**
     * build the select clause
     */
    protected void buildSelectClause()
    {
      ReportItemViewQuery vQuery = this.getViewQuery();
      vQuery.map(ReportItemView.DASHBOARDLABEL, this.query.getDashboard().getDisplayLabel().localize());
      vQuery.map(ReportItemView.REPORTLABEL, this.query.getReportLabel().localize());
      vQuery.map(ReportItemView.REPORTID, this.query.getId());
      vQuery.map(ReportItemView.REPORTNAME, this.query.getReportName());     
    }

    /**
     * Implement only if additional join criteria is required.
     */
    protected void buildWhereClause()
    {

    }

  }
}
