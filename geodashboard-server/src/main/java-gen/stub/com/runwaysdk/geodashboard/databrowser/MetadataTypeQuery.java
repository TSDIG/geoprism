package com.runwaysdk.geodashboard.databrowser;

import com.runwaysdk.query.Condition;
import com.runwaysdk.system.metadata.MdBusinessQuery;

/**
 *
 * @author Autogenerated by RunwaySDK
 */
public class MetadataTypeQuery extends com.runwaysdk.geodashboard.databrowser.MetadataTypeQueryBase  implements com.runwaysdk.generation.loader.Reloadable
{
  protected MdBusinessQuery mdBizQ;
  protected String[] packages;
  protected String[] types;
  
  public MetadataTypeQuery(com.runwaysdk.query.QueryFactory queryFactory, String[] packages, String[] types)
  {
    super(queryFactory);
    
    this.mdBizQ = new MdBusinessQuery(queryFactory);
    this.packages = packages;
    this.types = types;
    
    this.buildQuery(new DefaultMetadataTypeBuilder(queryFactory));
  }

  class DefaultMetadataTypeBuilder extends com.runwaysdk.query.ViewQueryBuilder implements com.runwaysdk.generation.loader.Reloadable
  {
    public DefaultMetadataTypeBuilder(com.runwaysdk.query.QueryFactory queryFactory)
    {
      super(queryFactory);
    }

    protected MetadataTypeQuery getViewQuery()
    {
      return (MetadataTypeQuery)super.getViewQuery();
    }

    /**
     * build the select clause
     */
    protected void buildSelectClause()
    {
      MetadataTypeQuery q = this.getViewQuery();
      
      q.map(MetadataType.DISPLAYLABEL, mdBizQ.getDisplayLabel().localize());
      q.map(MetadataType.PARENTTYPEID, mdBizQ.getSuperMdBusiness().getId());
      q.map(MetadataType.TYPEID, mdBizQ.getId());
      q.map(MetadataType.TYPENAME, mdBizQ.getTypeName());
      q.map(MetadataType.TYPEPACKAGE, mdBizQ.getPackageName());
    }

    /**
     * Implement only if additional join criteria is required.
     */
    protected void buildWhereClause()
    {
      Condition conditions = null;
      
      for (int i = 0; i < packages.length; ++i) {
        if (conditions == null) {
          conditions = mdBizQ.getPackageName().EQ(packages[i]);
        }
        else {
          conditions = conditions.OR(mdBizQ.getPackageName().EQ(packages[i]));
        }
      }
      
      for (int i = 0; i < types.length; ++i) {
        int lastPeriod = types[i].lastIndexOf('.');
        String pack = types[i].substring(0, lastPeriod);
        String type = types[i].substring(lastPeriod+1);
        
        if (conditions == null) {
          conditions = mdBizQ.getPackageName().EQ(pack).AND(mdBizQ.getTypeName().EQ(type));
        }
        else {
          conditions = conditions.OR(mdBizQ.getPackageName().EQ(pack).AND(mdBizQ.getTypeName().EQ(type)));
        }
      }
      
      this.getViewQuery().WHERE(conditions);
      
      System.out.println(this.getViewQuery().getSQL());
    }

  }
}
