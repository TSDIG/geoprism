package com.runwaysdk.geodashboard.databrowser;

import com.runwaysdk.system.metadata.MdBusinessQuery;

/**
 *
 * @author Autogenerated by RunwaySDK
 */
public class MetadataTypeQuery extends com.runwaysdk.geodashboard.databrowser.MetadataTypeQueryBase  implements com.runwaysdk.generation.loader.Reloadable
{
  protected MdBusinessQuery mdBizQ;
  protected String packag;
  
  public MetadataTypeQuery(com.runwaysdk.query.QueryFactory queryFactory, String packag)
  {
    super(queryFactory);
    
    this.mdBizQ = new MdBusinessQuery(queryFactory);
    this.packag = packag;
    
    this.buildQuery(new DefaultMetadataTypeBuilder(queryFactory));
  }

  class DefaultMetadataTypeBuilder extends com.runwaysdk.query.ViewQueryBuilder implements com.runwaysdk.generation.loader.Reloadable
  {
    public DefaultMetadataTypeBuilder(com.runwaysdk.query.QueryFactory queryFactory)
    {
      super(queryFactory);
    }

    protected MetadataTypeQuery getViewQuery()
    {
      return (MetadataTypeQuery)super.getViewQuery();
    }

    /**
     * build the select clause
     */
    protected void buildSelectClause()
    {
      MetadataTypeQuery q = this.getViewQuery();
      
      q.map(MetadataType.DISPLAYLABEL, mdBizQ.getDisplayLabel().localize());
      q.map(MetadataType.PARENTTYPEID, mdBizQ.getSuperMdBusiness().getId());
      q.map(MetadataType.TYPEID, mdBizQ.getId());
      q.map(MetadataType.TYPENAME, mdBizQ.getTypeName());
      q.map(MetadataType.TYPEPACKAGE, mdBizQ.getPackageName());
    }

    /**
     * Implement only if additional join criteria is required.
     */
    protected void buildWhereClause()
    {
      this.getViewQuery().WHERE(mdBizQ.getPackageName().EQ(MetadataTypeQuery.this.packag));
    }

  }
}
