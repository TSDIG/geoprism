package net.geoprism.data.etl;

@com.runwaysdk.business.ClassSignature(hash = -784454887)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to TargetFieldClassifierBinding.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class TargetFieldClassifierBindingBase extends net.geoprism.data.etl.TargetFieldBasicBinding implements com.runwaysdk.generation.loader.Reloadable
{
  public final static String CLASS = "net.geoprism.data.etl.TargetFieldClassifierBinding";
  public static java.lang.String ISVALIDATE = "isValidate";
  public static java.lang.String PACKAGENAME = "packageName";
  private static final long serialVersionUID = -784454887;
  
  public TargetFieldClassifierBindingBase()
  {
    super();
  }
  
  public Boolean getIsValidate()
  {
    return com.runwaysdk.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(ISVALIDATE));
  }
  
  public void validateIsValidate()
  {
    this.validateAttribute(ISVALIDATE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeBooleanDAOIF getIsValidateMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.data.etl.TargetFieldClassifierBinding.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeBooleanDAOIF)mdClassIF.definesAttribute(ISVALIDATE);
  }
  
  public void setIsValidate(Boolean value)
  {
    if(value == null)
    {
      setValue(ISVALIDATE, "");
    }
    else
    {
      setValue(ISVALIDATE, java.lang.Boolean.toString(value));
    }
  }
  
  public String getPackageName()
  {
    return getValue(PACKAGENAME);
  }
  
  public void validatePackageName()
  {
    this.validateAttribute(PACKAGENAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getPackageNameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.data.etl.TargetFieldClassifierBinding.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(PACKAGENAME);
  }
  
  public void setPackageName(String value)
  {
    if(value == null)
    {
      setValue(PACKAGENAME, "");
    }
    else
    {
      setValue(PACKAGENAME, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static TargetFieldClassifierBindingQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    TargetFieldClassifierBindingQuery query = new TargetFieldClassifierBindingQuery(new com.runwaysdk.query.QueryFactory());
    com.runwaysdk.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public static TargetFieldClassifierBinding get(String id)
  {
    return (TargetFieldClassifierBinding) com.runwaysdk.business.Business.get(id);
  }
  
  public static TargetFieldClassifierBinding getByKey(String key)
  {
    return (TargetFieldClassifierBinding) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static TargetFieldClassifierBinding lock(java.lang.String id)
  {
    TargetFieldClassifierBinding _instance = TargetFieldClassifierBinding.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static TargetFieldClassifierBinding unlock(java.lang.String id)
  {
    TargetFieldClassifierBinding _instance = TargetFieldClassifierBinding.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
